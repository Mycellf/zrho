; COMPUTES AND STORES THE FIRST 10000
; ELEMENTS OF THE KOLAKOSKI SEQUENCE TO H

; USES D AS A BUFFER TO MINIMIZE TIME
; SPENT WITH H BLOCKING

; MAXIMUM BUFFER SIZE STATISTICS
; (COLLECTED WITH THE SIZE OF D INCREASED)
; SIZE  RUNTIME
; 10    193119
; 50    158243
; 100   154233  (USED)
; 150   152869
; 200   152225
; 250   151730
; ...
; 500   150982
; 550   150734
; 600   150795
; 650   150776
; 700   150672
; 750   150500
; 800   150833  (INCREASES)
; 850   150559
; 900   150220  (BEST)
; 950   150486  (INCREASES)
; 1000  150722  (INCREASES)
; 2000  149524
; 3000  150297  (INCREASES)
; 3333  150466  (INCREASES)
; 3334  150466
; 3400  150466
; 3500  INCORRECT RESULT AT M = 9794
; 4000  INCORRECT RESULT AT M = 9794

; STORE THE FIRST FEW ELEMENTS
SET H 1
SET M 1
SET H 2
SET M 2
SET H 2

; M IS THE FIRST INDEX TO READ

SET Y 2 ; INDEX OF THE LAST WRITTEN ELEMENT

SET Z 1 ; NEXT ELEMENT

; FILL D AS MUCH AS POSSIBLE
LBL GENERATE
SET X H
UJP X = 0 BREAK

SET D Z
JMP X = 1 CONTINUE
ADD I 1 I
SET D Z

LBL CONTINUE
SUB 3 Z Z ; TOGGLE Z BETWEEN 1 AND 2
ADD I 1 I
ADD M 1 M
; CONTINUE IF THE BUFFER IS AT ITS SIZE
; LIMIT OR MIGHT EXCEED IT NEXT ITERATION
LJP I < 99 GENERATE

LBL BREAK

; COPY NEW VALUES FROM D TO H
SET X M
SET M Y

ADD Y I Y

LBL COPY_TO_H
CLK I 9999

LBL COPY_TO_H_LOOP
ADD M 1 M
SET H D
UJP M = 9999 END
ADD I 1 I
LJP M < Y COPY_TO_H_LOOP

CLK I 9999
SET M X

LJP Y â‰¤ 9900 GENERATE
SUB 9999 Y Y

; GENERATE A BUFFER WITH ONLY THE AMOUNT
; NEEDED TO FILL H
LBL GENERATE_END
SET D Z
JMP H = 1 CONTINUE_END
ADD I 1 I
SET D Z

LBL CONTINUE_END
SUB 3 Z Z ; TOGGLE Z BETWEEN 1 AND 2
ADD I 1 I
ADD M 1 M
; CONTINUE IF THE BUFFER CAN
; FILL THE REST OF H
LJP I < Y GENERATE_END

SUB 9999 Y M
SET Y 9999
JMP COPY_TO_H

LBL END
